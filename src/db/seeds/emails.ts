import { db } from '@/db';
import { emails } from '@/db/schema';

async function main() {
    const now = Date.now();
    const oneDayMs = 24 * 60 * 60 * 1000;
    const oneHourMs = 60 * 60 * 1000;
    const oneMinuteMs = 60 * 1000;

    const sampleEmails = [
        // Day 1 - 4 emails (3 high priority, 1 medium)
        {
            userId: 'user_demo_001',
            subject: 'Critical: Payment gateway not processing orders',
            senderEmail: 'john.mitchell@startup.io',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (6 * oneDayMs) - (8 * oneHourMs)),
            firstReplyAt: new Date(now - (6 * oneDayMs) - (6 * oneHourMs)),
            status: 'replied',
            priority: 'high',
            slaDeadline: new Date(now - (6 * oneDayMs) - (6 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (6 * oneDayMs) - (8 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Unable to access my account after password reset',
            senderEmail: 'sarah.chen@gmail.com',
            recipientEmail: 'help@company.com',
            receivedAt: new Date(now - (6 * oneDayMs) - (14 * oneHourMs)),
            firstReplyAt: null,
            status: 'overdue',
            priority: 'high',
            slaDeadline: new Date(now - (6 * oneDayMs) - (12 * oneHourMs)),
            isResolved: false,
            createdAt: new Date(now - (6 * oneDayMs) - (14 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'API integration returning 403 errors',
            senderEmail: 'mike.johnson@company.com',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (6 * oneDayMs) - (10 * oneHourMs)),
            firstReplyAt: new Date(now - (6 * oneDayMs) - (9 * oneHourMs)),
            status: 'replied',
            priority: 'high',
            slaDeadline: new Date(now - (6 * oneDayMs) - (8 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (6 * oneDayMs) - (10 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'How to add team members to workspace?',
            senderEmail: 'emma.davis@outlook.com',
            recipientEmail: 'help@company.com',
            receivedAt: new Date(now - (6 * oneDayMs) - (5 * oneHourMs)),
            firstReplyAt: new Date(now - (6 * oneDayMs) - (3 * oneHourMs)),
            status: 'replied',
            priority: 'medium',
            slaDeadline: new Date(now - (6 * oneDayMs) - (1 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (6 * oneDayMs) - (5 * oneHourMs)),
        },

        // Day 2 - 4 emails (1 high, 2 medium, 1 low)
        {
            userId: 'user_demo_001',
            subject: 'Billing charge discrepancy on latest invoice',
            senderEmail: 'robert.wilson@business.net',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (5 * oneDayMs) - (16 * oneHourMs)),
            firstReplyAt: new Date(now - (5 * oneDayMs) - (15 * oneHourMs)),
            status: 'replied',
            priority: 'high',
            slaDeadline: new Date(now - (5 * oneDayMs) - (14 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (5 * oneDayMs) - (16 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Request to upgrade to Enterprise plan',
            senderEmail: 'lisa.anderson@startup.io',
            recipientEmail: 'info@company.com',
            receivedAt: new Date(now - (5 * oneDayMs) - (12 * oneHourMs)),
            firstReplyAt: null,
            status: 'pending',
            priority: 'medium',
            slaDeadline: new Date(now - (5 * oneDayMs) + (8 * oneHourMs)),
            isResolved: false,
            createdAt: new Date(now - (5 * oneDayMs) - (12 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Feature request: Export data to Excel',
            senderEmail: 'david.brown@yahoo.com',
            recipientEmail: 'help@company.com',
            receivedAt: new Date(now - (5 * oneDayMs) - (7 * oneHourMs)),
            firstReplyAt: new Date(now - (5 * oneDayMs) - (4 * oneHourMs)),
            status: 'replied',
            priority: 'medium',
            slaDeadline: new Date(now - (5 * oneDayMs) + (3 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (5 * oneDayMs) - (7 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Documentation update suggestion for API v2',
            senderEmail: 'jennifer.lee@company.com',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (5 * oneDayMs) - (4 * oneHourMs)),
            firstReplyAt: null,
            status: 'pending',
            priority: 'low',
            slaDeadline: new Date(now - (5 * oneDayMs) + (20 * oneHourMs)),
            isResolved: false,
            createdAt: new Date(now - (5 * oneDayMs) - (4 * oneHourMs)),
        },

        // Day 3 - 4 emails (1 high, 2 medium, 1 low)
        {
            userId: 'user_demo_001',
            subject: 'Cancellation request - please process immediately',
            senderEmail: 'thomas.martinez@gmail.com',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (4 * oneDayMs) - (18 * oneHourMs)),
            firstReplyAt: null,
            status: 'overdue',
            priority: 'high',
            slaDeadline: new Date(now - (4 * oneDayMs) - (16 * oneHourMs)),
            isResolved: false,
            createdAt: new Date(now - (4 * oneDayMs) - (18 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Two-factor authentication setup issues',
            senderEmail: 'amanda.garcia@outlook.com',
            recipientEmail: 'help@company.com',
            receivedAt: new Date(now - (4 * oneDayMs) - (11 * oneHourMs)),
            firstReplyAt: new Date(now - (4 * oneDayMs) - (9 * oneHourMs)),
            status: 'replied',
            priority: 'medium',
            slaDeadline: new Date(now - (4 * oneDayMs) - (7 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (4 * oneDayMs) - (11 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Integration with Slack not syncing messages',
            senderEmail: 'kevin.rodriguez@startup.io',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (4 * oneDayMs) - (6 * oneHourMs)),
            firstReplyAt: new Date(now - (4 * oneDayMs) - (5 * oneHourMs)),
            status: 'replied',
            priority: 'medium',
            slaDeadline: new Date(now - (4 * oneDayMs) - (2 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (4 * oneDayMs) - (6 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Question about data retention policies',
            senderEmail: 'patricia.taylor@business.net',
            recipientEmail: 'info@company.com',
            receivedAt: new Date(now - (4 * oneDayMs) - (3 * oneHourMs)),
            firstReplyAt: null,
            status: 'pending',
            priority: 'low',
            slaDeadline: new Date(now - (4 * oneDayMs) + (21 * oneHourMs)),
            isResolved: false,
            createdAt: new Date(now - (4 * oneDayMs) - (3 * oneHourMs)),
        },

        // Day 4 - 4 emails (1 high, 2 medium, 1 low)
        {
            userId: 'user_demo_001',
            subject: 'Error 500 when uploading large files',
            senderEmail: 'christopher.white@gmail.com',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (3 * oneDayMs) - (15 * oneHourMs)),
            firstReplyAt: new Date(now - (3 * oneDayMs) - (14 * oneHourMs)),
            status: 'replied',
            priority: 'high',
            slaDeadline: new Date(now - (3 * oneDayMs) - (13 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (3 * oneDayMs) - (15 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Mobile app crashes on iOS 17',
            senderEmail: 'michelle.harris@yahoo.com',
            recipientEmail: 'help@company.com',
            receivedAt: new Date(now - (3 * oneDayMs) - (10 * oneHourMs)),
            firstReplyAt: null,
            status: 'pending',
            priority: 'medium',
            slaDeadline: new Date(now - (3 * oneDayMs) + (14 * oneHourMs)),
            isResolved: false,
            createdAt: new Date(now - (3 * oneDayMs) - (10 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Unable to download monthly reports',
            senderEmail: 'daniel.clark@company.com',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (3 * oneDayMs) - (8 * oneHourMs)),
            firstReplyAt: new Date(now - (3 * oneDayMs) - (6 * oneHourMs)),
            status: 'replied',
            priority: 'medium',
            slaDeadline: new Date(now - (3 * oneDayMs) - (4 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (3 * oneDayMs) - (8 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Suggestion for dark mode in settings',
            senderEmail: 'nancy.lewis@outlook.com',
            recipientEmail: 'info@company.com',
            receivedAt: new Date(now - (3 * oneDayMs) - (2 * oneHourMs)),
            firstReplyAt: new Date(now - (3 * oneDayMs) - (1 * oneHourMs)),
            status: 'replied',
            priority: 'low',
            slaDeadline: new Date(now - (3 * oneDayMs) + (22 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (3 * oneDayMs) - (2 * oneHourMs)),
        },

        // Day 5 - 4 emails (1 high, 2 medium, 1 low)
        {
            userId: 'user_demo_001',
            subject: 'Account locked after multiple login attempts',
            senderEmail: 'brian.walker@startup.io',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (2 * oneDayMs) - (19 * oneHourMs)),
            firstReplyAt: new Date(now - (2 * oneDayMs) - (18 * oneHourMs)),
            status: 'replied',
            priority: 'high',
            slaDeadline: new Date(now - (2 * oneDayMs) - (17 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (2 * oneDayMs) - (19 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Webhook delivery failures since yesterday',
            senderEmail: 'stephanie.hall@business.net',
            recipientEmail: 'help@company.com',
            receivedAt: new Date(now - (2 * oneDayMs) - (13 * oneHourMs)),
            firstReplyAt: null,
            status: 'pending',
            priority: 'medium',
            slaDeadline: new Date(now - (2 * oneDayMs) + (11 * oneHourMs)),
            isResolved: false,
            createdAt: new Date(now - (2 * oneDayMs) - (13 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Custom domain setup instructions needed',
            senderEmail: 'george.allen@gmail.com',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (2 * oneDayMs) - (9 * oneHourMs)),
            firstReplyAt: new Date(now - (2 * oneDayMs) - (7 * oneHourMs)),
            status: 'replied',
            priority: 'medium',
            slaDeadline: new Date(now - (2 * oneDayMs) - (5 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (2 * oneDayMs) - (9 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Request for product roadmap and upcoming features',
            senderEmail: 'karen.young@yahoo.com',
            recipientEmail: 'info@company.com',
            receivedAt: new Date(now - (2 * oneDayMs) - (4 * oneHourMs)),
            firstReplyAt: null,
            status: 'pending',
            priority: 'low',
            slaDeadline: new Date(now - (2 * oneDayMs) + (20 * oneHourMs)),
            isResolved: false,
            createdAt: new Date(now - (2 * oneDayMs) - (4 * oneHourMs)),
        },

        // Day 6 - 4 emails (1 high, 3 medium)
        {
            userId: 'user_demo_001',
            subject: 'Database connection timeout errors in production',
            senderEmail: 'steven.king@company.com',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (1 * oneDayMs) - (17 * oneHourMs)),
            firstReplyAt: null,
            status: 'overdue',
            priority: 'high',
            slaDeadline: new Date(now - (1 * oneDayMs) - (15 * oneHourMs)),
            isResolved: false,
            createdAt: new Date(now - (1 * oneDayMs) - (17 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'SSO configuration with Azure AD',
            senderEmail: 'laura.wright@outlook.com',
            recipientEmail: 'help@company.com',
            receivedAt: new Date(now - (1 * oneDayMs) - (12 * oneHourMs)),
            firstReplyAt: new Date(now - (1 * oneDayMs) - (10 * oneHourMs)),
            status: 'replied',
            priority: 'medium',
            slaDeadline: new Date(now - (1 * oneDayMs) - (8 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (1 * oneDayMs) - (12 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Email notifications not being received',
            senderEmail: 'mark.lopez@startup.io',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (1 * oneDayMs) - (8 * oneHourMs)),
            firstReplyAt: new Date(now - (1 * oneDayMs) - (6 * oneHourMs)),
            status: 'replied',
            priority: 'medium',
            slaDeadline: new Date(now - (1 * oneDayMs) - (4 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (1 * oneDayMs) - (8 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Performance optimization recommendations',
            senderEmail: 'jessica.hill@business.net',
            recipientEmail: 'info@company.com',
            receivedAt: new Date(now - (1 * oneDayMs) - (3 * oneHourMs)),
            firstReplyAt: null,
            status: 'pending',
            priority: 'medium',
            slaDeadline: new Date(now - (1 * oneDayMs) + (1 * oneHourMs)),
            isResolved: false,
            createdAt: new Date(now - (1 * oneDayMs) - (3 * oneHourMs)),
        },

        // Day 7 (today) - 4 emails (1 high, 2 medium, 1 low)
        {
            userId: 'user_demo_001',
            subject: 'Critical: All webhook endpoints returning 504',
            senderEmail: 'paul.scott@gmail.com',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (5 * oneHourMs)),
            firstReplyAt: new Date(now - (4 * oneHourMs)),
            status: 'replied',
            priority: 'high',
            slaDeadline: new Date(now - (3 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (5 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Bulk user import not completing',
            senderEmail: 'rachel.green@yahoo.com',
            recipientEmail: 'help@company.com',
            receivedAt: new Date(now - (4 * oneHourMs)),
            firstReplyAt: null,
            status: 'pending',
            priority: 'medium',
            slaDeadline: new Date(now + (0.5 * oneHourMs)),
            isResolved: false,
            createdAt: new Date(now - (4 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'API rate limit increase request',
            senderEmail: 'william.adams@company.com',
            recipientEmail: 'support@company.com',
            receivedAt: new Date(now - (2 * oneHourMs)),
            firstReplyAt: new Date(now - (1 * oneHourMs)),
            status: 'replied',
            priority: 'medium',
            slaDeadline: new Date(now + (2 * oneHourMs)),
            isResolved: true,
            createdAt: new Date(now - (2 * oneHourMs)),
        },
        {
            userId: 'user_demo_001',
            subject: 'Feature inquiry: Multi-language support',
            senderEmail: 'sandra.baker@outlook.com',
            recipientEmail: 'info@company.com',
            receivedAt: new Date(now - (1 * oneHourMs)),
            firstReplyAt: null,
            status: 'pending',
            priority: 'low',
            slaDeadline: new Date(now + (23 * oneHourMs)),
            isResolved: false,
            createdAt: new Date(now - (1 * oneHourMs)),
        },
    ];

    await db.insert(emails).values(sampleEmails);
    
    console.log('✅ Emails seeder completed successfully - 28 emails created');
}

main().catch((error) => {
    console.error('❌ Seeder failed:', error);
});